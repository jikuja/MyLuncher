buildscript {
    repositories {
        maven {
            name = 'ForgeFS'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        jcenter()
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.0'
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
    }
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenCentral()
    maven {
        name = 'Mojang libs'
        url = 'https://libraries.minecraft.net/'
    }
}

dependencies {
    //compile files('libs/d310-NewLaunch.jar')
    compile 'org.swinglabs.swingx:swingx-all:1.6.4'
    compile 'com.miglayout:miglayout-swing:4.2'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.mojang:authlib:1.5.17'
    compile 'org.apache.logging.log4j:log4j-api:2.0-beta9'
    compile 'org.apache.logging.log4j:log4j-core:2.0-beta9'
    compile 'org.projectlombok:lombok:1.12.6'
    compile 'com.google.guava:guava:18.0'
    compile 'com.beust:jcommander:1.30'
    compile 'com.google.code.findbugs:jsr305:1.3.9'//nonnull annotations
    compile 'org.tukaani:xz:1.5' // LZMA support
    //commons lang3 via authlib
    //commons io via authlib
    testCompile 'junit:junit:4.10'
    // something depends mockito-all => core not needed
    //testCompile 'org.mockito:mockito-core:1.+'
    testCompile 'org.powermock:powermock-module-junit4:1.6.0'
    testCompile 'org.powermock:powermock-api-mockito:1.6.0'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.0'
}


description = "MyLuncher"
version = '0.0.2'
group = 'com.github.jikuja'
sourceCompatibility = 1.6
targetCompatibility = 1.6
mainClassName = 'com.github.jikuja.myluncher.Main'

jar {
    manifest {
        attributes 'Main-Class': 'com.github.jikuja.myluncher.Main'
    }
}

shadowJar  {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    dependencies {
        exclude(dependency('com.mojang:authlib'))
        exclude(dependency('org.projectlombok:lombok'))
    }
    classifier = ''
}